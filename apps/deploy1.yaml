---
apiVersion: v1
kind: Namespace
metadata:
  name: chiseld-test1
  labels:
    name: chiseld-test1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chiseld-test1
  labels: 
    app: chiseld-test1
    name: chiseld-test1
  namespace: chiseld-test1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chiseld-test1
  template:
    metadata:
      labels:
        app: chiseld-test1
    spec:
      containers:
      - name: chiseld-test1
        image: 976672264352.dkr.ecr.us-east-2.amazonaws.com/test:latest
        ports:
          - containerPort: 8080 
          - containerPort: 50051
          - containerPort: 9090
#        livenessProbe:
#          httpGet:
#            path: /liveness
#            port: 9090
        env:
          - name: RUST_LOG
            value: "info"
          - name: RUST_BACKTRACE
            value: "1"
          - name: DATA_DB_URI
            value: "sqlite:///home/chiseld/chiseld-data.db?mode=rwc"
          - name: EXECUTOR_THREADS
            value: "1"
          - name: METADATA_DB_URI
            value: "sqlite:///home/chiseld/chiseld.db?mode=rwc"
          - name: API_LISTEN_ADDR
            value: "0.0.0.0"
          - name: RPC_LISTEN_ADDR
            value: "0.0.0.0"
          - name: API_PORT
            value: "8080"
          - name: RPC_PORT
            value: "50051"
        command: 
          - "/usr/local/bin/chiseld"
        args:
          - --api-listen-addr 
          - $(API_LISTEN_ADDR):$(API_PORT)
          - --rpc-listen-addr 
          - $(RPC_LISTEN_ADDR):$(RPC_PORT)
          - --metadata-db-uri 
          - $(METADATA_DB_URI)
          - --data-db-uri 
          - $(DATA_DB_URI)
          - --executor-threads 
          - $(EXECUTOR_THREADS)
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 345
      - name: tools
        image: 976672264352.dkr.ecr.us-east-2.amazonaws.com/toolset:latest

---
apiVersion: v1
kind: Service
metadata:
  name: chiseld-test1
  namespace: chiseld-test1
spec:
  type: NodePort
  selector: 
    app: chiseld-test1
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    name: http
  - protocol: TCP
    port: 50051
    targetPort: 50051
    name: api
  - protocol: TCP
    port: 9090
    targetPort: 9090
    name: health

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: chiseld-test1
  name: ingress-chiseld-test1
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:976672264352:certificate/b5c3e81f-6755-4094-8996-8ff37febac92
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    external-dns.alpha.kubernetes.io/hostname: chiseld-test1.chiselstrike.io

spec:
  #ingressClassName: alb
  rules:
    - host: chiseld-test1.chiselstrike.io
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: chiseld-test1
              port:
                number: 80
